# SOME DESCRIPTIVE TITLE.
# Copyright (C) Open Contracting Partnership
# This file is distributed under the same license as the Open Contracting Data Standard package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Alessio Dragoni <ad@sciamlab.com>, 2018
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Open Contracting Data Standard 1.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-17 11:28-0500\n"
"PO-Revision-Date: 2017-04-24 10:48+0000\n"
"Last-Translator: Alessio Dragoni <ad@sciamlab.com>, 2018\n"
"Language-Team: Italian (https://www.transifex.com/OpenDataServices/teams/59224/it/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: it\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../docs/schema/merging.md:1
msgid "Merging"
msgstr "Unione"

#: ../../docs/schema/merging.md:3
msgid ""
"An OCDS [record](../getting_started/releases_and_records) aggregates all the"
" releases available for a contracting process at a given time, and can "
"include:"
msgstr ""

#: ../../docs/schema/merging.md:5
msgid ""
"a compiled release, which expresses the current state of the contracting "
"process, by showing only the most recent field values"
msgstr ""

#: ../../docs/schema/merging.md:6
msgid ""
"a versioned release, which expresses all historical states of the "
"contracting process, by showing all the field values over time"
msgstr ""

#: ../../docs/schema/merging.md:8
msgid ""
"**Merging** is the process of combining individual releases into a compiled "
"or versioned release, described in more detail below. At a high level:"
msgstr ""

#: ../../docs/schema/merging.md:10
msgid ""
"A compiled release is created by taking only the most recent values of "
"fields from releases in a given contracting process."
msgstr ""

#: ../../docs/schema/merging.md:11
msgid ""
"A versioned release is created by taking all values of fields from releases "
"in a given contracting process, copying metadata about the release from "
"which they are taken, and putting them in chronological order."
msgstr ""

#: ../../docs/schema/merging.md:17
msgid ""
"A public procurement agency publishes a release to announce an opportunity "
"on January 1, in which the total estimated value of the procurement is "
"$1,000. On January 31, it publishes a release to correct the information, in"
" which the description of the procurement is expanded. On February 5, the "
"agency publishes a release to amend the opportunity, in which the total "
"estimated value of the procurement is increased to $2,000."
msgstr ""

#: ../../docs/schema/merging.md:19
msgid ""
"The agency decides to award the opportunity to two of the bidders. On March "
"1, the agency publishes a release to announce that Company A is awarded a "
"contract of $750. On March 3, the agency publishes a release to announce "
"that Company B is awarded a contract of $750."
msgstr ""

#: ../../docs/schema/merging.md:21
msgid ""
"Through these individual releases, the agency provides real-time data about "
"the contracting process."
msgstr ""

#: ../../docs/schema/merging.md:23
msgid ""
"At each release, the agency also updates the record, which combines all the "
"releases to date. In the final record:"
msgstr ""

#: ../../docs/schema/merging.md:25
msgid ""
"The compiled release contains all the information about the opportunity and "
"awards, using the same schema as a release."
msgstr ""

#: ../../docs/schema/merging.md:26
msgid ""
"The versioned release makes it easy to see how the description and total "
"estimated value changed over time."
msgstr ""

#: ../../docs/schema/merging.md:78
msgid "Merging specification"
msgstr ""

#: ../../docs/schema/merging.md:80
msgid "Discarded fields"
msgstr ""

#: ../../docs/schema/merging.md:82
msgid ""
"In the release schema, `\"omitWhenMerged\": true` is declared on fields that"
" must be discarded during merging. These are presently: `id`, `date` and "
"`tag`."
msgstr ""

#: ../../docs/schema/merging.md:84 ../../docs/schema/merging.md:161
#: ../../docs/schema/merging.md:172 ../../docs/schema/merging.md:194
msgid "For a compiled release:"
msgstr ""

#: ../../docs/schema/merging.md:85
msgid ""
"Both the fields and their values are discarded, because they are metadata "
"about the individual releases; the compiled release replaces these with its "
"own metadata."
msgstr ""

#: ../../docs/schema/merging.md:86 ../../docs/schema/merging.md:165
#: ../../docs/schema/merging.md:174 ../../docs/schema/merging.md:197
msgid "For a versioned release:"
msgstr ""

#: ../../docs/schema/merging.md:87
msgid ""
"The fields are discarded, but their values are moved, as described below, in"
" order to indicate from which releases each other field value is taken."
msgstr ""

#: ../../docs/schema/merging.md:89
msgid "If `omitWhenMerged` is set to `false`, ignore it."
msgstr ""

#: ../../None:1
msgid ""
"The compiled release presently uses the same schema as the release schema, "
"which means that the `id`, `date` and `tag` fields are required in a "
"compiled release. We invite discussion on whether to change these "
"requirements in a separate compiled release schema in issue "
"[#330](https://github.com/open-contracting/standard/issues/330), and on how "
"to identify and date compiled and versioned releases in issue "
"[#834](https://github.com/open-contracting/standard/issues/834)."
msgstr ""

#: ../../None:3
msgid ""
"In the meantime, an intermediate solution is to set `tag` to "
"`[\"compiled\"]`, `date` to the date of the most recent release, and `id` to"
" `{ocid}-{date}`, like in the [reference implementation](#reference-"
"implementation) of the merge routine."
msgstr ""

#: ../../docs/schema/merging.md:101
msgid "Versioned values"
msgstr ""

#: ../../docs/schema/merging.md:103
msgid ""
"To convert a field's value in a release to a **versioned value**, you must:"
msgstr ""

#: ../../docs/schema/merging.md:105
msgid "Create an empty JSON object"
msgstr ""

#: ../../docs/schema/merging.md:106
msgid ""
"Set its `releaseID`, `releaseDate`, `releaseTag` fields to the release's "
"`id`, `date`, `tag` values"
msgstr ""

#: ../../docs/schema/merging.md:107
msgid "Set its `value` field to the field's value in the release"
msgstr ""

#: ../../docs/schema/merging.md:109
msgid ""
"A **versioned value** thus describes a field's value in a specific release."
msgstr ""

#: ../../docs/schema/merging.md:111
msgid ""
"For example, in the above worked example, the estimated value of the "
"procurement was $1,000 in a release (`tender/value/amount` was `1000`). "
"Following the steps above, the versioned value is:"
msgstr ""

#: ../../docs/schema/merging.md:124
msgid ""
"In a **versioned release**, with a few exceptions, a field's value is "
"replaced with an array of versioned values, which should be in chronological"
" order by `releaseDate`."
msgstr ""

#: ../../docs/schema/merging.md:126
msgid ""
"For example, in the above worked example, the estimated value was $1,000 in "
"a release published January 1, 2016 and then $2,000 in a release published "
"February 5, 2016. In a versioned release, this is serialized as below:"
msgstr ""

#: ../../docs/schema/merging.md:144
msgid ""
"The structure of the versioned release is described by the [versioned "
"release schema](../../versioned-release-validation-schema.json); note that "
"the `ocid` field's value is not versioned."
msgstr ""

#: ../../docs/schema/merging.md:146
msgid "Merge routine"
msgstr ""

#: ../../docs/schema/merging.md:148
msgid "To create a compiled or versioned release, you must:"
msgstr ""

#: ../../docs/schema/merging.md:150
msgid "Get all releases with the same `ocid` value"
msgstr ""

#: ../../docs/schema/merging.md:151
msgid "Order the releases in chronological order by `date`"
msgstr ""

#: ../../docs/schema/merging.md:152
msgid "Create an empty JSON object for the compiled or versioned release"
msgstr ""

#: ../../docs/schema/merging.md:153
msgid ""
"Merge each release (**input**), in order, into the JSON object (**output**),"
" as follows:"
msgstr ""

#: ../../docs/schema/merging.md:155
msgid "Object values"
msgstr ""

#: ../../docs/schema/merging.md:157
msgid "The release is itself an object, so this case is encountered first."
msgstr ""

#: ../../docs/schema/merging.md:159
msgid ""
"If the object is empty in **input**, do nothing. For each field within the "
"object in **input**:"
msgstr ""

#: ../../docs/schema/merging.md:162
msgid ""
"If the field in **input** has a value of `null`, remove the field from the "
"object in **output**, if present"
msgstr ""

#: ../../docs/schema/merging.md:163
msgid ""
"If the field isn't in **output**, add the field to the object in **output**,"
" and set it to its value in **input**"
msgstr ""

#: ../../docs/schema/merging.md:164
msgid ""
"If the field is in **output**, merge the field's values in **output** and "
"**input** according to the [merge routine](#merge-routine)"
msgstr ""

#: ../../docs/schema/merging.md:166
msgid ""
"Merge the field's values in **output** and **input** according to the [merge"
" routine](#merge-routine); if there is a result, add the field to the object"
" in **output** if not already added, and set it to the result"
msgstr ""

#: ../../docs/schema/merging.md:168
msgid "Literal values"
msgstr ""

#: ../../docs/schema/merging.md:170
msgid "If the **input** value is neither an object nor an array, then:"
msgstr ""

#: ../../docs/schema/merging.md:173
msgid ""
"If the **input** value is different from the **output** value, replace the "
"**output** value with the **input** value"
msgstr ""

#: ../../docs/schema/merging.md:175
msgid ""
"If there is no **output** value, set the **output** value to an empty JSON "
"array, convert the **input** value to a [versioned value](#versioned-"
"values), and append it to the new array of versioned values in **output**"
msgstr ""

#: ../../docs/schema/merging.md:176
msgid ""
"If the **input** value is different from the value of the `value` field of "
"the most recent versioned value in **output**, convert the **input** value "
"to a [versioned value](#versioned-values), and append it to the array of "
"versioned values in **output**"
msgstr ""

#: ../../docs/schema/merging.md:178
msgid "Array values"
msgstr ""

#: ../../docs/schema/merging.md:180
msgid ""
"If the **input** array contains anything other than objects, treat the array"
" as a literal value. Otherwise, there are two sub-routines for arrays of "
"objects: whole list merge and identifier merge."
msgstr ""

#: ../../docs/schema/merging.md:182
msgid "Whole list merge"
msgstr "Unire il contenuto di tutto l'elenco"

#: ../../docs/schema/merging.md:184
msgid ""
"An **input** array must be treated as a literal value if the corresponding "
"field in a [dereferenced copy](../../dereferenced-release-schema.json) of "
"the release schema has `\"array\"` in its `type` and if any of the following"
" are also true:"
msgstr ""

#: ../../docs/schema/merging.md:186
msgid "The field has `\"wholeListMerge\": true`"
msgstr ""

#: ../../docs/schema/merging.md:187
msgid ""
"The field sets `items/type`, and has anything other than `\"object\"` in "
"`items/type`"
msgstr ""

#: ../../docs/schema/merging.md:188
msgid ""
"The field has `\"object\"` in its `items/type`, sets `items/properties`, and"
" has no `id` field in `items/properties`"
msgstr ""

#: ../../docs/schema/merging.md:190
msgid "Identifier merge"
msgstr "Unione degli identificatori"

#: ../../docs/schema/merging.md:192
msgid ""
"This case is encountered if the above conditions aren't met. If the array is"
" empty in **input**, do nothing. For each object within the array in "
"**input**:"
msgstr ""

#: ../../docs/schema/merging.md:195
msgid ""
"If there is an object in the array in **output** with the same `id` value as"
" the object in **input**, merge the matching objects in **input** and "
"**output** according to the [merge routine](#merge-routine)"
msgstr ""

#: ../../docs/schema/merging.md:196
msgid "Otherwise, append the object in **input** to the array in **output**"
msgstr ""

#: ../../docs/schema/merging.md:198
msgid ""
"If there is an object in the array in **output** with the same `id` value as"
" the object in **input**, merge the matching objects in **input** and "
"**output** according to the [merge routine](#merge-routine) *except for the "
"`id` field*, which is not versioned and instead kept as-is"
msgstr ""

#: ../../docs/schema/merging.md:199
msgid ""
"Otherwise, merge an empty JSON object and the object in **input** according "
"to the [merge routine](#merge-routine) *except for the `id` field*, which is"
" not versioned and instead kept as-is, and append the result to the array in"
" **output**"
msgstr ""

#: ../../None:1
msgid ""
"In this case, to remove an object from an array, you need to instead set "
"each of its fields to `null`. We invite discussion on how to remove objects "
"from arrays in issue [#232](https://github.com/open-"
"contracting/standard/issues/232)."
msgstr ""

#: ../../None:1
msgid ""
"In the release schema, `\"versionId\": true` is declared on `id` fields that"
" must be versioned. This is only for convenience and might be removed in "
"future versions of OCDS (see issue [#812](https://github.com/open-"
"contracting/standard/issues/812)). If `\"versionId\": true` is declared on "
"the `id` field of an object within an array, it is ignored. `\"versionId\": "
"false` has no meaning and is ignored."
msgstr ""

#: ../../docs/schema/merging.md:219
msgid "Reference implementation"
msgstr "Implementazione di riferimento"

#: ../../docs/schema/merging.md:221
msgid ""
"A reference implementation of the merge routine [is available in Python on "
"GitHub](https://github.com/open-contracting/ocds-merge). We strongly "
"encourage any re-implementations to [read its commented code and use its "
"test cases](https://github.com/open-contracting/ocds-merge#reference-"
"implementation), to ensure correctness."
msgstr ""
